@using AKCore.DataModel
@model AKCore.DataModel.Widget
<div class="row">
    <div class="col-md-12">
        <div class="halan-map"></div>
        <h1 class="map-text">@t.Get(TranslationDomains.Widgets, "JoinUs")</h1>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        @Html.Raw(Model.Text)
    </div>
    <div class="col-md-6">
        <form id="recruit-form" method="POST" action="/SignUp/Signup">
            <div class="alert alert-danger" style="display: none;"></div>
            <div class="alert alert-success" style="display: none;"></div>
            <div class="form-group">
                <label asp-for="JoinUsModel.FirstName">@t.Get(TranslationDomains.Common, "FirstName")</label>
                <input type="text" class="form-control" placeholder="@t.Get(TranslationDomains.Common, "FirstName")" name="FirstName">
            </div>
            <div class="form-group">
                <label asp-for="JoinUsModel.LastName">@t.Get(TranslationDomains.Common, "LastName")</label>
                <input type="text" class="form-control" placeholder="@t.Get(TranslationDomains.Common, "LastName")" name="LastName">
            </div>
            <div class="form-group">
                <label asp-for="JoinUsModel.Email">@t.Get(TranslationDomains.Common, "Email")</label>
                <input class="form-control" type="email" placeholder="@t.Get(TranslationDomains.Common, "Email")" name="Email">
            </div>
            <div class="form-group">
                <label asp-for="JoinUsModel.Tel">@t.Get(TranslationDomains.Common, "Phone")</label>
                <input class="form-control" type="tel" placeholder="@t.Get(TranslationDomains.Common, "Phone")" name="Tel">
            </div>
            <div class="form-group">
                <label asp-for="JoinUsModel.Instrument"></label>
                <select class="form-control" name="Instrument" required>
                    <option value="">@t.Get(TranslationDomains.Common, "SelectInstrument")</option>
                    @foreach (var instr in AkInstruments.Instrument)
                    {
                        <option value="@instr">@t.Get(TranslationDomains.Instruments, instr)</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="JoinUsModel.BotQuestion">@t.Get(TranslationDomains.Widgets, "BotQuestion")</label>
                <input class="form-control" type="text" placeholder="@t.Get(TranslationDomains.Widgets, "AnswerWithNumber")" name="botquestion">
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-default">@t.Get(TranslationDomains.Widgets, "Join")!</button>
            </div>
        </form>
    </div>
</div>


<script>


    var bgcolor = "#d4d4d4";
    var roadcolor = "#b10000";
    var mapStyle = [
        {
            "featureType": "administrative",
            "elementType": "labels",
            "stylers": [
                { "visibility": "off" }
            ]
        }, {
            "featureType": "landscape.natural",
            "elementType": "geometry.fill",
            "stylers": [
                { "color": "#d4d4d4" }
            ]
        }, {
            "featureType": "water",
            "elementType": "geometry.fill",
            "stylers": [
                { "color": "#627488" }
            ]
        }, {
            "featureType": "road",
            "elementType": "geometry.fill",
            "stylers": [
                { "color": roadcolor }
            ]
        }, {
            "featureType": "road",
            "elementType": "geometry.stroke",
            "stylers": [
                { "color": roadcolor }
            ]
        },
        {
            "elementType": "labels.text.stroke",
            "stylers": [
                { "color": "#ffffff" }
            ]
        },
        {
            "elementType": 'labels.text.fill',
            "stylers": [{ color: '#000000' }]
        },
        {
            "featureType": "landscape.man_made",
            "elementType": "geometry.fill",
            "stylers": [
                { "color": "#000" }
            ]
        }, {
            "featureType": "poi",
            "elementType": "geometry.fill",
            "stylers": [
                { "color": "#000" }
            ]
        }, {
            "featureType": "road",
            "elementType": "labels",
            "stylers": [
                {
                    "visibility": "off"
                }
            ]
        }, {
            "featureType": "road.arterial",
            "elementType": "labels",
            "stylers": [
                {
                    "visibility": "on"
                }
            ]
        }, {
            "featureType": "road.local",
            "elementType": "labels",
            "stylers": [
                {
                    "visibility": "on"
                }
            ]
        }, {
            "featureType": "road.highway",
            "elementType": "labels",
            "stylers": [
                {
                    "visibility": "on"
                }
            ]
        }
    ];

    function initMap() {
        var place = { lat: 55.7109073, lng: 13.2182541 };
        var mplace = { lat: 55.7097573, lng: 13.2175518 };
        var map = new google.maps.Map(document.getElementsByClassName('halan-map')[0],
        {
            zoom: 15,
            center: place,
            styles: mapStyle
        });
        var marker = new google.maps.Marker({
            position: mplace,
            map: map,
            title: "Hålan!"
        });

    }

</script>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBWuK0EVbjZ3uP2m2p1HoFWU0Of8KtDYuw&callback=initMap">
</script>
